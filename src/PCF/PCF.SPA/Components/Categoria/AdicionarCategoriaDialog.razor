@inject IWebApiClient WebApiClient
@inject ISnackbar Snackbar

<EditForm Model="newCategory" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <MudDialog Class="blur dialog-background" TitleClass="blur dialog-background-title" ContentClass="dialog-background-surface py-10" ActionsClass="dialog-background-surface">
        <DialogContent>
            <MudTextField @bind-Value="newCategory.Nome" Label="Nome" Required="true" />
            <MudTextField @bind-Value="newCategory.Descricao" Label="Descrição" />
        </DialogContent>
        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Disabled="@isLoading">
                @if (isLoading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                }
                else
                {
                    <MudText>INCLUIR</MudText>
                }
            </MudButton>
            <MudButton OnClick="Cancel">Cancelar</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    private bool isLoading;
    private CategoriaRequestViewModel newCategory = new CategoriaRequestViewModel() { Nome = "" };

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    private async Task Submit()
    {
        isLoading = true;

        try
        {
            await WebApiClient.CategoriasPOSTAsync(newCategory);
            Snackbar.Add("Categoria cadastrada com sucesso.", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (ApiException<IEnumerable<string>> e) when (e.StatusCode == (int)System.Net.HttpStatusCode.BadRequest && e.Result.Any())
        {
            Snackbar.Add(string.Join(", ", e.Result), Severity.Warning);
        }
        catch (Exception ex)
        {            
            Snackbar.Add($"Erro não esperado: {ex.Message}", Severity.Error);
        }

        isLoading = false;
    }

    private void Cancel()
    {
        MudDialog.Close(DialogResult.Cancel());
    }
}